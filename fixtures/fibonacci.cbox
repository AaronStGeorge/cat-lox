fn fib(n) {
  let i = 0;
  let j = 1;
  
  for (let c = 0; c < n + 1; c = c + 1) {
    let temp = i + j;
    i = j;
    j = temp;
  }
  return j;
}

fn r_fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

// ============

let n = 10;

let tick = clock();
for (let i = 0; i < n; i = i + 1) {
  print(fib(i));
}
let tock = clock();

print("non recursive fibonacci completed in " + (tock - tick) + " (s)");

tick = clock();
for (let i = 0; i < n; i = i + 1) {
  print(r_fib(i));
}
tock = clock();

print("recursive fibonacci completed in " + (tock - tick) + " (s)");
